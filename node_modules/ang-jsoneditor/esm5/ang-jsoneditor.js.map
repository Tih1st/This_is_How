{
  "version": 3,
  "file": "ang-jsoneditor.js",
  "sources": [
    "ng://ang-jsoneditor/out/lib.module.ts",
    "ng://ang-jsoneditor/out/jsoneditor/jsoneditor.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonEditorComponent } from './jsoneditor/jsoneditor.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    JsonEditorComponent\n  ],\n  exports: [\n    JsonEditorComponent\n  ]\n})\nexport class NgJsonEditorModule {\n\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: NgJsonEditorModule,\n      providers: [\n      ]\n    };\n  }\n}\n",
    "import {\n  Component, OnInit, ElementRef, Input, ViewChild,\n  SimpleChanges\n} from '@angular/core';\nimport * as editor from 'jsoneditor';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-editor',\n  template: '<div #jsonEditorContainer></div>'\n})\n\nexport class JsonEditorComponent implements OnInit {\n  private editor: any;\n\n  @ViewChild('jsonEditorContainer') jsonEditorContainer: ElementRef;\n\n  private _data: Object = {};\n\n  @Input() options: JsonEditorOptions = new JsonEditorOptions();\n  @Input('data')\n  set data(value: Object) {\n    this._data = value;\n    if (this.editor) {\n      this.editor.destroy();\n      this.ngOnInit();\n    }\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.editor = new editor(this.jsonEditorContainer.nativeElement, this.options, this._data);\n  }\n\n  public collapseAll() {\n    this.editor.collapseAll();\n  }\n\n  public expandAll() {\n    this.editor.expandAll();\n  }\n\n  public focus() {\n    this.editor.focus();\n  }\n\n  public get(): JSON {\n    return this.editor.get();\n  }\n\n  public getMode(): JsonEditorMode {\n    return this.editor.getMode() as JsonEditorMode;\n  }\n\n  public getName(): string {\n    return this.editor.getName();\n  }\n\n  public getText(): string {\n    return this.editor.getText();\n  }\n\n  public set(json: JSON) {\n    this.editor.set(json);\n  }\n\n  public setMode(mode: JsonEditorMode) {\n    this.editor.setMode(mode);\n  }\n\n  public setName(name: string) {\n    this.editor.setName(name);\n  }\n\n  public setSchema(schema: any) {\n    this.editor.setSchema(schema);\n  }\n\n  public setOptions(newOptions: JsonEditorOptions) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    this.options = newOptions;\n    this.ngOnInit();\n  }\n\n  public destroy() {\n    this.editor.destroy();\n  }\n}\n\nexport type JsonEditorMode = 'tree' | 'view' | 'form' | 'code' | 'text';\n\nexport interface JsonEditorTreeNode {\n  field: String,\n  value: String,\n  path: String[]\n}\n\nexport class JsonEditorOptions {\n  public ace: Object;\n  public ajv: Object;\n  public onChange: () => void;\n  public onEditable: (node: JsonEditorTreeNode | {}) => boolean | { field: boolean, value: boolean };\n  public onError: (error: any) => void;\n  public onModeChange: (newMode: JsonEditorMode, oldMode: JsonEditorMode) => void;\n  public escapeUnicode: boolean;\n  public sortObjectKeys: boolean;\n  public history: boolean;\n  public mode: JsonEditorMode;\n  public modes: JsonEditorMode[];\n  public name: String;\n  public schema: Object;\n  public search: boolean;\n  public indentation: Number;\n  public theme: Number;\n  public language: String;\n  public languages: Object;\n\n  constructor() {\n    this.escapeUnicode = false;\n    this.sortObjectKeys = false;\n    this.history = true;\n    this.mode = 'tree';\n    this.search = true;\n    this.indentation = 2;\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
