import { Component, Input, ViewChild, NgModule } from '@angular/core';
import * as editor from 'jsoneditor';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class JsonEditorComponent {
    constructor() {
        this._data = {};
        this.options = new JsonEditorOptions();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set data(value) {
        this._data = value;
        if (this.editor) {
            this.editor.destroy();
            this.ngOnInit();
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.editor = new editor(this.jsonEditorContainer.nativeElement, this.options, this._data);
    }
    /**
     * @return {?}
     */
    collapseAll() {
        this.editor.collapseAll();
    }
    /**
     * @return {?}
     */
    expandAll() {
        this.editor.expandAll();
    }
    /**
     * @return {?}
     */
    focus() {
        this.editor.focus();
    }
    /**
     * @return {?}
     */
    get() {
        return this.editor.get();
    }
    /**
     * @return {?}
     */
    getMode() {
        return /** @type {?} */ (this.editor.getMode());
    }
    /**
     * @return {?}
     */
    getName() {
        return this.editor.getName();
    }
    /**
     * @return {?}
     */
    getText() {
        return this.editor.getText();
    }
    /**
     * @param {?} json
     * @return {?}
     */
    set(json) {
        this.editor.set(json);
    }
    /**
     * @param {?} mode
     * @return {?}
     */
    setMode(mode) {
        this.editor.setMode(mode);
    }
    /**
     * @param {?} name
     * @return {?}
     */
    setName(name) {
        this.editor.setName(name);
    }
    /**
     * @param {?} schema
     * @return {?}
     */
    setSchema(schema) {
        this.editor.setSchema(schema);
    }
    /**
     * @param {?} newOptions
     * @return {?}
     */
    setOptions(newOptions) {
        if (this.editor) {
            this.editor.destroy();
        }
        this.options = newOptions;
        this.ngOnInit();
    }
    /**
     * @return {?}
     */
    destroy() {
        this.editor.destroy();
    }
}
JsonEditorComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'json-editor',
                template: '<div #jsonEditorContainer></div>'
            },] },
];
/** @nocollapse */
JsonEditorComponent.ctorParameters = () => [];
JsonEditorComponent.propDecorators = {
    "jsonEditorContainer": [{ type: ViewChild, args: ['jsonEditorContainer',] },],
    "options": [{ type: Input },],
    "data": [{ type: Input, args: ['data',] },],
};
/**
 * @record
 */

class JsonEditorOptions {
    constructor() {
        this.escapeUnicode = false;
        this.sortObjectKeys = false;
        this.history = true;
        this.mode = 'tree';
        this.search = true;
        this.indentation = 2;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgJsonEditorModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: NgJsonEditorModule,
            providers: []
        };
    }
}
NgJsonEditorModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    JsonEditorComponent
                ],
                exports: [
                    JsonEditorComponent
                ]
            },] },
];
/** @nocollapse */
NgJsonEditorModule.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { NgJsonEditorModule, JsonEditorComponent, JsonEditorOptions };
//# sourceMappingURL=ang-jsoneditor.js.map
