{
  "version": 3,
  "file": "ang-jsoneditor.umd.min.js",
  "sources": [
    "ng://ang-jsoneditor/out/jsoneditor/jsoneditor.component.ts",
    "ng://ang-jsoneditor/out/lib.module.ts"
  ],
  "sourcesContent": [
    "import {\n  Component, OnInit, ElementRef, Input, ViewChild,\n  SimpleChanges\n} from '@angular/core';\nimport * as editor from 'jsoneditor';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-editor',\n  template: '<div #jsonEditorContainer></div>'\n})\n\nexport class JsonEditorComponent implements OnInit {\n  private editor: any;\n\n  @ViewChild('jsonEditorContainer') jsonEditorContainer: ElementRef;\n\n  private _data: Object = {};\n\n  @Input() options: JsonEditorOptions = new JsonEditorOptions();\n  @Input('data')\n  set data(value: Object) {\n    this._data = value;\n    if (this.editor) {\n      this.editor.destroy();\n      this.ngOnInit();\n    }\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.editor = new editor(this.jsonEditorContainer.nativeElement, this.options, this._data);\n  }\n\n  public collapseAll() {\n    this.editor.collapseAll();\n  }\n\n  public expandAll() {\n    this.editor.expandAll();\n  }\n\n  public focus() {\n    this.editor.focus();\n  }\n\n  public get(): JSON {\n    return this.editor.get();\n  }\n\n  public getMode(): JsonEditorMode {\n    return this.editor.getMode() as JsonEditorMode;\n  }\n\n  public getName(): string {\n    return this.editor.getName();\n  }\n\n  public getText(): string {\n    return this.editor.getText();\n  }\n\n  public set(json: JSON) {\n    this.editor.set(json);\n  }\n\n  public setMode(mode: JsonEditorMode) {\n    this.editor.setMode(mode);\n  }\n\n  public setName(name: string) {\n    this.editor.setName(name);\n  }\n\n  public setSchema(schema: any) {\n    this.editor.setSchema(schema);\n  }\n\n  public setOptions(newOptions: JsonEditorOptions) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    this.options = newOptions;\n    this.ngOnInit();\n  }\n\n  public destroy() {\n    this.editor.destroy();\n  }\n}\n\nexport type JsonEditorMode = 'tree' | 'view' | 'form' | 'code' | 'text';\n\nexport interface JsonEditorTreeNode {\n  field: String,\n  value: String,\n  path: String[]\n}\n\nexport class JsonEditorOptions {\n  public ace: Object;\n  public ajv: Object;\n  public onChange: () => void;\n  public onEditable: (node: JsonEditorTreeNode | {}) => boolean | { field: boolean, value: boolean };\n  public onError: (error: any) => void;\n  public onModeChange: (newMode: JsonEditorMode, oldMode: JsonEditorMode) => void;\n  public escapeUnicode: boolean;\n  public sortObjectKeys: boolean;\n  public history: boolean;\n  public mode: JsonEditorMode;\n  public modes: JsonEditorMode[];\n  public name: String;\n  public schema: Object;\n  public search: boolean;\n  public indentation: Number;\n  public theme: Number;\n  public language: String;\n  public languages: Object;\n\n  constructor() {\n    this.escapeUnicode = false;\n    this.sortObjectKeys = false;\n    this.history = true;\n    this.mode = 'tree';\n    this.search = true;\n    this.indentation = 2;\n  }\n\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonEditorComponent } from './jsoneditor/jsoneditor.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    JsonEditorComponent\n  ],\n  exports: [\n    JsonEditorComponent\n  ]\n})\nexport class NgJsonEditorModule {\n\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: NgJsonEditorModule,\n      providers: [\n      ]\n    };\n  }\n}\n"
  ],
  "names": [
    "JsonEditorComponent",
    "this",
    "_data",
    "options",
    "JsonEditorOptions",
    "Object",
    "defineProperty",
    "prototype",
    "set",
    "value",
    "editor",
    "destroy",
    "ngOnInit",
    "jsonEditorContainer",
    "nativeElement",
    "collapseAll",
    "expandAll",
    "focus",
    "get",
    "getMode",
    "getName",
    "getText",
    "json",
    "setMode",
    "mode",
    "setName",
    "name",
    "setSchema",
    "schema",
    "setOptions",
    "newOptions",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "ViewChild",
    "Input",
    "data",
    "escapeUnicode",
    "sortObjectKeys",
    "history",
    "search",
    "indentation",
    "NgJsonEditorModule",
    "forRoot",
    "ngModule",
    "providers",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "kWAAA,IAAAA,EAAA,WA6BE,SAAFA,IAZAC,KAAAC,SAEAD,KAAAE,QAAwC,IAAIC,SAE5CC,OAAAC,eAAMN,EAANO,UAAA,QAAAC,IAAA,SAAWC,GACPR,KAAKC,MAAQO,EACTR,KAAKS,SACPT,KAAKS,OAAOC,UACZV,KAAKW,6CAOTZ,EAAFO,UAAAK,SAAE,WACEX,KAAKS,OAAS,IAAIA,EAAOT,KAAKY,oBAAoBC,cAAeb,KAAKE,QAASF,KAAKC,QAG/EF,EAATO,UAAAQ,YAAS,WACLd,KAAKS,OAAOK,eAGPf,EAATO,UAAAS,UAAS,WACLf,KAAKS,OAAOM,aAGPhB,EAATO,UAAAU,MAAS,WACLhB,KAAKS,OAAOO,SAGPjB,EAATO,UAAAW,IAAS,WACL,OAAOjB,KAAKS,OAAOQ,OAGdlB,EAATO,UAAAY,QAAS,WACL,OAAOlB,KAAKS,OAAOS,WAGdnB,EAATO,UAAAa,QAAS,WACL,OAAOnB,KAAKS,OAAOU,WAGdpB,EAATO,UAAAc,QAAS,WACL,OAAOpB,KAAKS,OAAOW,WAGdrB,EAATO,UAAAC,IAAS,SAAIc,GACTrB,KAAKS,OAAOF,IAAIc,IAGXtB,EAATO,UAAAgB,QAAS,SAAQC,GACbvB,KAAKS,OAAOa,QAAQC,IAGfxB,EAATO,UAAAkB,QAAS,SAAQC,GACbzB,KAAKS,OAAOe,QAAQC,IAGf1B,EAATO,UAAAoB,UAAS,SAAUC,GACf3B,KAAKS,OAAOiB,UAAUC,IAGjB5B,EAATO,UAAAsB,WAAS,SAAWC,GACZ7B,KAAKS,QACPT,KAAKS,OAAOC,UAEdV,KAAKE,QAAU2B,EACf7B,KAAKW,YAGAZ,EAATO,UAAAI,QAAS,WACLV,KAAKS,OAAOC,aAzFhB,kBAMAoB,KAACC,EAAAA,UAADC,OAEEC,SAAU,cACVC,SAAU,+FAMZtB,sBAAAkB,KAAGK,EAAAA,UAAHH,MAAa,yBAIb9B,UAAA4B,KAAGM,EAAAA,QACHC,OAAAP,KAAGM,EAAAA,MAAHJ,MAAS,WAiFT,IAAA7B,EAoBE,WACEH,KAAKsC,eAAgB,EACrBtC,KAAKuC,gBAAiB,EACtBvC,KAAKwC,SAAU,EACfxC,KAAKuB,KAAO,OACZvB,KAAKyC,QAAS,EACdzC,KAAK0C,YAAc,GC/HvBC,EAAA,WAAA,SAAAA,YAiBgBA,EAAhBC,QAAS,WAEL,OACEC,SAAUF,EACVG,iBArBN,kBAIAhB,KAACiB,EAAAA,SAADf,OACEgB,SACEC,EAAAA,cAEFC,cACEnD,GAEFoD,SACEpD"
}
